//! Parser for Kali language.

WHITESPACE = _{ " " }

/// An identifier.
ident = { ASCII_ALPHA ~ ("_" | ASCII_ALPHANUMERIC)* }

/// A unicode character.
unicode_char = { LETTER | MARK | NUMBER | PUNCTUATION | SYMBOL | SEPARATOR | OTHER } 

/// An escape sequence.
escaped_char = { "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t" | "u" ~ HEX_DIGIT{4}) }

/// A character.
char = { "'" ~ (escaped_char | unicode_char) ~ "'" }

/// A UTF-8 encoded string.
string = { "\"" ~ (escaped_char | unicode_char)* ~ "\"" }

/// A binary integer.
binary_integer = { "-"? ~ "0b" ~ ASCII_BIN_DIGIT+ }

/// An octal integer.
octal_integer = { "-"? ~ "0o" ~ ASCII_BIN_DIGIT+ }

/// A decimal integer.
decimal_integer = { "-"? ~ "0d"? ~ ASCII_DIGIT+ }

/// A hexidecimal integer.
hex_integer = { "-"? ~ "0x" ~ ASCII_HEX_DIGIT+ }

/// An integer.
integer = { decimal_integer | hex_integer | octal_integer | binary_integer }

/// A literal.
literal = { string | integer | float | boolean | tuple | unit }

/// An expression.
expr = { ident }

/// A type.
type = { ident | unit_type }

/// A tuple type.
tuple_type = { "(" ~ type ~ ("," ~ type)* ~ ")" }

/// The unit type.
unit_type = { "()" }

type_declaration = { "type" ~ ident ~ "=" ~ type }
